on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: Sripragna$1
          MYSQL_DATABASE: CFTdatabase
        ports: ['3306:3306']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python $
      uses: actions/setup-python@v2
      with:
        python-version: $
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Migrations
      run: python manage.py migrate
      env: 
        DBENGINE: django.db.backends.mysql
        DBNAME: CFTdatabase
        DBUSER: root
        DBPASSWORD: Sripragna$1
        DBHOST: 127.0.0.1
        DBPORT: $
    - name: Run Tests
      run: |
        python manage.py test
      env: 
        DBENGINE: django.db.backends.mysql
        DBNAME: CFTdatabase
        DBUSER: root
        DBPASSWORD: Sripragna$1
        DBHOST: 127.0.0.1
        DBPORT: $

# name: Django CI with Dockerized MySQL

# on:
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     services:
#       mysql:
#         image: mysql:5.7
#         env:
#           MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#         ports:
#           - 3306:3306
#         options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8

#     - name: Install dependencies
#       run: pip install -r requirements.txt

#     - name: Apply Django Migrations
#       run: python manage.py migrate

#     - name: Set Environment Variables
#       run: |
#         echo "DATABASE_URL=mysql://root:${MYSQL_ROOT_PASSWORD}@localhost:3306/CFTdatabase" >> .env

#     - name: Run Integration Tests
#       run: python manage.py test

#     - name: Cleanup MySQL Container
#       run: docker stop mysql
